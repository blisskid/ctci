package com.blisskid.fb;
import java.util.*;

public class S0416M {
    public static void main(String[] args) {
//        int[] nums=new int[]{};
        int[] nums=new int[]{1,2,3};
        System.out.println(new S0416M().canPartition(nums));
    }
    public boolean canPartition(int[] nums) {
        int sum=0;
        for(int i=0;i<nums.length;i++){
            sum+=nums[i];
        }
        if(sum%2!=0){
            return false;
        }else{
            return f(nums,sum/2);
        }
    }

    private boolean f(int[] nums,int sum){
        boolean[][] s=new boolean[nums.length+1][sum+1];
        s[0][0]=true;
        for(int i=1;i<=nums.length;i++){
            s[i][0]=false;
        }
        for(int i=1;i<=sum;i++){
            s[0][i]=false;
        }
        for(int i=1;i<=nums.length;i++){
            for(int j=1;j<=sum;j++){
                if(j<nums[i-1]){
                    s[i][j]=s[i-1][j];
                }else{
                    s[i][j]=s[i-1][j-nums[i-1]]||s[i-1][j];
                }

            }
        }
        return s[nums.length][sum];
    }
}
